master bran ch 에서 코드 수정함
git add로 기록할 파일부터 고르고
고른파일 기록명령은 git commit
작업폴더 -> git add ->(staging area)-> git commit -> (repository)
good job
git diff : commit 내용
branch : 프로젝트 복사본 / 기존 코드를 복사하여 새로운 경로에서 수정한다.
왜냐면 원래 있던 코드를 직접 수정하다가 버그나면 대혼란 그자체 큰일이야
git branch 이름
git switch 이름 : 이동하고 싶은 브랜치로 간다
git merge 이름 : 이름의 branch가 현재 branch에 합쳐진다.
git branch -d 이름 : 브랜치 삭제
git branch -D 이름 : merge 안한 branch 삭제

rebase 쓰는 이유 : 브랜치 없이도 코드 잘짜는 느낌쓰, 간단하고 짧은 브랜치에 사용
단점 : conflict 엔딩 많이 발생
새로운 브랜치로 이동해서 git rebase 중심브랜치명, 중심브랜치로 이동후 git merge 새로운 브랜치명

squash and merge 
git merge --squash 새브랜치 : 중심에 새로운 브랜치로 추가(쓸데없는 commit이 표시가 안돼, 깔끔)

commit 취소하기 : git revert commitID
git reset --hard commitID : 과거로 모든 걸 되돌린다(도르마무)

git branch -M main : main으로 변경
git push -u 원격저장소주소 main
git remote add 변수명 주소